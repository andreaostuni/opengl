image: docker

services:
    - docker:dind

variables:
    REPOSITORY: "${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
    OS: "ubuntu"
    OS_VERSION: "18.04"

before_script:
    - docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}"

stages:
    - base
    - glvnd

.base_template: &base_definition
    stage: base
    script:
    - docker build --pull -t "${REPOSITORY}:base-${OS}${OS_VERSION}"
                   --build-arg "from=${OS}:${OS_VERSION}"
                   --label "com.nvidia.build.ref=${CI_COMMIT_SHA}"
                   --label "com.nvidia.build.id=${CI_JOB_ID}"
                   "base/"
    - if [[ "${NO_OS_SUFFIX}" == true ]]; then
          docker tag "${REPOSITORY}:base-${OS}${OS_VERSION}" "${REPOSITORY}:base";
      fi
    - docker push "${REPOSITORY}"

.glvnd_template: &glvnd_definition
    stage: glvnd
    script:
    - VERSION="${CI_JOB_NAME:1}"
    - docker build --pull -t "${REPOSITORY}:${VERSION}-runtime-${OS}${OS_VERSION}"
                   --build-arg "from=${REPOSITORY}:base-${OS}${OS_VERSION}"
                   "${VERSION}/runtime"
    - docker build -t "${REPOSITORY}:${VERSION}-devel-${OS}${OS_VERSION}"
                   --build-arg "from=${REPOSITORY}:${VERSION}-runtime-${OS}${OS_VERSION}"
                   "${VERSION}/devel"
    - if [[ "${NO_OS_SUFFIX}" == true ]]; then
          docker tag "${REPOSITORY}:${VERSION}-runtime-${OS}${OS_VERSION}" "${REPOSITORY}:${VERSION}-runtime";
          docker tag "${REPOSITORY}:${VERSION}-runtime-${OS}${OS_VERSION}" "${REPOSITORY}:runtime";
          docker tag "${REPOSITORY}:${VERSION}-devel-${OS}${OS_VERSION}" "${REPOSITORY}:${VERSION}-devel";
          docker tag "${REPOSITORY}:${VERSION}-devel-${OS}${OS_VERSION}" "${REPOSITORY}:devel";
      fi
    - docker push "${REPOSITORY}"

base:
    <<: *base_definition

v1.0-glvnd:
    <<: *glvnd_definition
